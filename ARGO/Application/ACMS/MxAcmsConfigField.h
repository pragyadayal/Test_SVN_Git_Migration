#if !defined MXACMSCONFIGFIELD_H
#define MXACMSCONFIGFIELD_H
///////////////////////////////////////////////////////////////////////////
//
//   MMM     MMM       AAA       TTTTTTTTTT  RRRRRR    IIIIIIII  XX   XX
//   MMMM   MMMM      AA AA          TT      RR   RR      II      XX XX
//   MM MM MM MM     AA   AA         TT      RR    RR     II       XXX
//   MM  MM   MM    AAAAAAAAA        TT      RRRRRRR      II       XXX
//   MM       MM   AA       AA       TT      RR  RR       II      XX XX
//   MM       MM  AA         AA      TT      RR   RR   IIIIIIII  XX   XX
//
//   Company      : Matrix ComSec Pvt. Ltd., Baroda, India.
//   Project      : Access Control System
//   Created By   : Ronak Tanna
//   File         : MxAcmsConfigField.h
//   Description  : This defines configuration tables and fields for
//					communicating with ACMS.
//
/////////////////////////////////////////////////////////////////////////////

//******** Place all include files ***
#include "MxTypedef.h"

//******** Defines and Data Types ****

// It defines that two person group is not assigned
#define ACMS_TWO_PERSON_GRP_NONE	0

//User configuration
typedef enum
{
	USER_CFG_FIELD_ENABLE = 1,					//1
	USER_CFG_FIELD_REF_ID,						//2
	USER_CFG_FIELD_NAME,						//3
	USER_CFG_FIELD_VIP,							//4
	USER_CFG_FIELD_BYPASS_FP,					//5
	USER_CFG_FIELD_CARD1,						//6
	USER_CFG_FIELD_CARD2,						//7
	USER_CFG_FIELD_PIN,							//8
	USER_CFG_FIELD_TYPE,						//9
	USER_CFG_FIELD_VALIDITY_ENABLE,				//10
	USER_CFG_FIELD_VALIDITY_DATE,				//11
	USER_CFG_FIELD_HOLI_SCH_NO,					//12
	USER_CFG_FIELD_ABS_RULE_ENABLE,				//13
	USER_CFG_FIELD_MAX_ABS_COUNT,				//14

	USER_CFG_FIELD_RESTRICT_ACCESS = 17,		//17
	USER_CFG_FIELD_ALPHANUM_ID,					//18

	USER_CFG_FIELD_CAFE_ENABLE,					//19
	USER_CFG_FIELD_CAFE_DISCOUNT_LEVEL,			//20
	USER_CFG_FIELD_CAFE_PAYMENT_MODE,			//21
	USER_CFG_FIELD_CAFE_BLOCKED,				//22

	USER_CFG_FIELD_SMART_ROUTE_ID,				//23
	USER_CFG_FIELD_SMART_ROUTE_LEVEL,			//24
	USER_CFG_FIELD_SELF_ENRL_ENABLE,			//25
	USER_CFG_FIELD_JOB_TYPE,					//26

	USER_CFG_FIELD_CHECK_BAL_ON_SERVER,			//27
	USER_CFG_FIELD_GRP_NO,						//28
	USER_CFG_FIELD_CAFE_POLICY_CHECK,			//29
	USER_CFG_FIELD_SHOW_ATTNDC_DTL,				//30
	USER_CFG_FIELD_ENABLE_FACE_RECOGNITION,		//31
	USER_CFG_FIELD_BYPASS_FACE,					//32

	USER_CFG_FIELD_DOB_ENABLE,					//33
	USER_CFG_FIELD_DOB,							//34
	USER_CFG_FIELD_CAFE_OFFLINE_TRANSACTION_TYPE,	//35

	MAX_USER_CFG_FIELD
}USER_CFG_FIELD_e;

//Holiday Schedule
typedef enum
{
	HOLIDAY_SCH_FIELD_NAME = 1,
	HOLIDAY_SCH_FIELD_START_DATE,
	HOLIDAY_SCH_FIELD_END_DATE,
	HOLIDAY_SCH_FIELD_ID,

	MAX_HOLIDAY_SCH_FIELD
}HOLIDAY_SCH_FIELD_e;

//Two Person configuration
typedef enum
{
	TWO_PERSON_FIELD_NAME = 1,
	TWO_PERSON_FIELD_MEMBER1,
	TWO_PERSON_FIELD_MEMBER2,
	TWO_PERSON_FIELD_MEMBER3,
	TWO_PERSON_FIELD_MEMBER4,
	TWO_PERSON_FIELD_MEMBER5,
	TWO_PERSON_FIELD_MEMBER6,
	TWO_PERSON_FIELD_MEMBER7,
	TWO_PERSON_FIELD_MEMBER8,
	TWO_PERSON_FIELD_MEMBER9,
	TWO_PERSON_FIELD_MEMBER10,
	TWO_PERSON_FIELD_MEMBER11,
	TWO_PERSON_FIELD_MEMBER12,
	TWO_PERSON_FIELD_MEMBER13,
	TWO_PERSON_FIELD_MEMBER14,
	TWO_PERSON_FIELD_MEMBER15,
	TWO_PERSON_FIELD_MEMBER16,
	TWO_PERSON_FIELD_MEMBER17,
	TWO_PERSON_FIELD_MEMBER18,
	TWO_PERSON_FIELD_MEMBER19,
	TWO_PERSON_FIELD_MEMBER20,

	MAX_TWO_PERSON_FIELD
}TWO_PERSON_FIELD_e;

//IO Link configuration
typedef enum
{
	IO_LINK_FIELD_ENABLE = 1,
 	IO_LINK_FIELD_NAME,
	IO_LINK_FIELD_INPUT_PORT,
	IO_LINK_FIELD_OUTPUT_PORT,
	IO_LINK_FIELD_OUTPUT_TYPE,
	IO_LINK_FIELD_PULSE_TIME,
	IO_LINK_FIELD_RESET_LINK_FLAG,				//7
	IO_LINK_FIELD_RESET_LINK_TIME,				//8

	MAX_IO_LINK_FIELD
}IO_LINK_FIELD_e;

//First in user configuration
typedef enum
{
    MAX_FIRST_IN_USER_FIELD = 999,	// OLD_MAX_FIRST_IN_USER_FIELD = 25  //MAX_FIRST_IN_USER_FIELD_99 = 99
}FIRST_IN_USER_FIELD_e;

//System configuration - Basic
typedef enum
{
	BASIC_CFG_FIELD_NAME = 1,					//1

	BASIC_CFG_FIELD_TIME_FORMAT,				//2
	BASIC_CFG_FIELD_UTZ,						//3
	BASIC_CFG_FIELD_AUTO_TIME_ENABLE,			//4
	BASIC_CFG_FIELD_NTP_TYPE,					//5
	BASIC_CFG_FIELD_PREDEFINED_NTP_ADDR,		//6
	BASIC_CFG_FIELD_USER_DEFINED_NTP_ADDR,		//7

	BASIC_CFG_FIELD_READER1_TYPE,				//8
	BASIC_CFG_FIELD_READER1_MODE,				//9
	BASIC_CFG_FIELD_READER2_TYPE,				//10
	BASIC_CFG_FIELD_READER2_MODE,				//11
	BASIC_CFG_FIELD_READER3_TYPE,				//12
	BASIC_CFG_FIELD_READER3_MODE,				//13
	BASIC_CFG_FIELD_REX_ENABLE,					//14

	BASIC_CFG_FIELD_APPL,						//15
	BASIC_CFG_FIELD_DOOR_ACCESS_MODE,			//16
	BASIC_CFG_FIELD_ACTIVE_DAY0,				//17
	BASIC_CFG_FIELD_ACTIVE_DAY1,				//18
	BASIC_CFG_FIELD_ACTIVE_DAY2,				//19
	BASIC_CFG_FIELD_ACTIVE_DAY3,				//20
	BASIC_CFG_FIELD_ACTIVE_DAY4,				//21
	BASIC_CFG_FIELD_ACTIVE_DAY5,				//22
	BASIC_CFG_FIELD_ACTIVE_DAY6,				//23
	BASIC_CFG_FIELD_HOLIDAY_OVERRIDE,			//24
	BASIC_CFG_FIELD_WORKING_START_TIME,			//25
	BASIC_CFG_FIELD_WORKING_END_TIME,			//26

	BASIC_CFG_FIELD_DOOR_PULSE_TMR,				//27
	BASIC_CFG_FIELD_EXIT_ON_LOCK,				//28
	BASIC_CFG_FIELD_AUTO_RELOCK,				//29
	BASIC_CFG_FIELD_DOOR_ALARM_ENABLE,			//30
	BASIC_CFG_FIELD_TAMPER_ALARM_ENABLE,		//31
	BASIC_CFG_FIELD_DOOR_SENSE_ENABLE,			//32
	BASIC_CFG_FIELD_DOOR_SENSE_TYPE,			//33
	BASIC_CFG_FIELD_DOOR_SENSE_MONITORED,		//34
	BASIC_CFG_FIELD_BUZ_MUTE_FLAG,				//35
	BASIC_CFG_FIELD_TAG_REDETECTION_DELAY,		//36
	BASIC_CFG_FIELD_EXIT_READER_TYPE,			//37
	BASIC_CFG_FIELD_EXTERNAL_READER_ACCESS_MODE,//38
	BASIC_CFG_FIELD_READER_SCHEDULE_MODE_ENABLE,//39
	BASIC_CFG_FIELD_FINGER_TEMPLATE_FORMAT,		//40
	BASIC_CFG_FIELD_DOOR_MODE_SELECTION_ENABLE, //41
	BASIC_CFG_WIGND_OUT_ENABLE,					//42
	BASIC_CFG_WIGND_WAIT_FOR_PANEL_SIGNAL,		//43
	BASIC_CFG_WIGND_WAIT_TIMER,					//44
	BASIC_CFG_WIGND_OUT_FORMAT,					//45
	BASIC_CFG_WIGND_OUT_DIRECTION,				//46
	BASIC_CFG_FIELD_WAIT_FOR_VERIFY_SIGNAL,		//47
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_0,	//48
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_1,	//49
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_2,	//50
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_3,	//51
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_4,	//52
	BASIC_CFG_FIELD_WIEGNAD_OUT_FORMAT_NO_5,	//53
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_0,	//54
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_1,	//55
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_2,	//56
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_3,	//57
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_4,	//58
	BASIC_CFG_FIELD_WIEGNAD_EVENT_SPCL_CODE_5,	//59
	BASIC_CFG_FIELD_AUTO_RELOCK_TIME,			//60
	BASIC_CFG_FIELD_IO_LINK_NW_INTERFACE,		//61
	BASIC_CFG_FIELD_API_ACCESS_ALLOW_ENABLE,	//62
	BASIC_CFG_FIELD_API_ENTRY_ACCESS_MODE,		//63
	BASIC_CFG_FIELD_API_EXIT_ACCESS_MODE,		//64
	BASIC_CFG_FIELD_API_SECURITY_KEY,			//65
	BASIC_CFG_FIELD_CAD_DURATION,				//66

	BASIC_CFG_FIELD_VISITOR_DOOR_ACCESS_MODE,	//67
	BASIC_CFG_FIELD_VISITOR_EXT_RDR_ACCESS_MODE,//68
	BASIC_CFG_FIELD_PIN_CHANGE_CODE,			//69
	BASIC_CFG_FIELD_PROMPT_SP_FN_F,				//70
	BASIC_CFG_FIELD_HTTP_SERVER_USER_ID,		//71
	BASIC_CFG_FIELD_HTTP_SERVER_PASSWORD,		//72
	BASIC_CFG_GENERATE_EVENTS,					//73
	BASIC_CFG_DISPLAY_ALLOW_DURATION,			//74
	BASIC_CFG_BUZZER_DENIED_DURATION,			//75
	BASIC_CFG_DISPLAY_DENIED_DURATION,			//76
	BASIC_CFG_DOOR_ABNORMAL_ALARM,				//77 //TODO Shubham
	BASIC_CFG_DOOR_FORCE_OPEN_ALARM,			//78
	BASIC_CFG_DOOR_FAULT_ALARM,					//79
	BASIC_CFG_DOOR_PANIC_ALARM,					//80
	BASIC_CFG_CAFETERIA_FACE_ACCESS_MODE,		//81
	BASIC_CFG_ACCESS_DENIED_TEMP_THRESHOLD_EXCEED,		// 82
	BASIC_CFG_ACCESS_DENIED_FACE_MASK_NOT_DETECTED		= 83,
	BASIC_CFG_HTTP_ENCRYPTION,					// 84
	BASIC_CFG_HTTP_SERVER_URL,					// 85
	BASIC_CFG_ACCESS_SCHEDULE_ID,				//86
	BASIC_CFG_ACCESS_SCHEDULE_ENABLE_F,			//87
	BASIC_CFG_HIDE_MENU_BAR_FOR_ACCESS_SCHEDULE_F,		//88	
MAX_BASIC_CFG_FIELD
}BASIC_CFG_FIELD_e;

//System configuration - Advance
typedef enum
{
	ADV_CFG_FIELD_ASC_ENABLE = 1,				//1
	ADV_CFG_FIELD_ASC,							//2
	ADV_CFG_FIELD_USE_COUNT_ENABLE,				//3
	ADV_CFG_FIELD_USE_COUNT,					//4
	ADV_CFG_FIELD_FIRST_IN_ENABLE,				//5
	ADV_CFG_FIELD_FIRST_IN_LIST,				//6
    ADV_CFG_FIELD_TWO_PERSON_ENABLE,			//7
	ADV_CFG_FIELD_TWO_PERSON_GRP1,				//8
	ADV_CFG_FIELD_TWO_PERSON_GRP2,				//9
	ADV_CFG_FIELD_OCCUPANCY_ENABLE,				//10
	ADV_CFG_FIELD_OCCUPANCY_COUNT,				//11
    ADV_CFG_FIELD_APB_ENTRY_ENABLE,				//12
	ADV_CFG_FIELD_APB_HARD,						//13
	ADV_CFG_FIELD_APB_FORGIVENESS,				//14

	ADV_CFG_FIELD_AUX_IN_ENABLE,				//15
	ADV_CFG_FIELD_AUX_IN_MONITOR,				//16
	ADV_CFG_FIELD_AUX_IN_SENSE_TYPE,			//17
	ADV_CFG_FIELD_AUX_IN_DEBOUNCE_TIME,			//18
	ADV_CFG_FIELD_AUX_OUT_ENABLE,				//19

	ADV_CFG_FIELD_FP_MODE,						//20
	ADV_CFG_FIELD_FP_MAX,						//21
	ADV_CFG_FIELD_ENROLL_ENABLE,				//22
	ADV_CFG_FIELD_ENROLL_TYPE,					//23
	ADV_CFG_FIELD_DFLT_NO_OF_FINGER,			//24
	ADV_CFG_FIELD_DFLT_NO_OF_CARD,				//25

	ADV_CFG_FIELD_TWO_PERSON_TMR,				//26
    ADV_CFG_FIELD_LATEIN_EARLYOUT_TMR,			//27
	ADV_CFG_FIELD_INTER_DIGIT_TMR,				//28
	ADV_CFG_FIELD_MULTI_ACCESS_TMR,				//29

	ADV_CFG_FIELD_ABSENTEE_ENABLE,				//30
	ADV_CFG_FIELD_GEN_EXIT_SW_EVENT,			//31
	ADV_CFG_FIELD_GEN_INVALID_USER_EVENT,		//32
	ADV_CFG_FIELD_VOICE_GUIDANCE_ENABLE,		//33
	ADV_CFG_FIELD_APB_EXIT_ENABLE,				//34

	ADV_CFG_FIELD_SSA_ENABLE,					//35
	ADV_CFG_FIELD_SSA_ACCESS_MODE,				//36
	ADV_CFG_FIELD_SSA_ACCESS_LEVEL,				//37

	ADV_CFG_FIELD_DVR_INTIGRATION_ENBL,			//38
	ADV_CFG_FIELD_DVR_IPADDR,					//39
	ADV_CFG_FIELD_DVR_PORT,						//40
	ADV_CFG_FIELD_DVR_INTERFACE,				//41

	ADV_CFG_FIELD_SMART_ROUTE_ACCESS_ENBL,		//42

	//greeting related configuration
	ADV_CFG_FIELD_GREETINGS_ENBL,				//43
	ADV_CFG_FIELD_GREETING1_STRT_TIME,			//44
	ADV_CFG_FIELD_GREETING1_END_TIME,			//45
	ADV_CFG_FIELD_GREETING1_MSG,				//46
	ADV_CFG_FIELD_GREETING2_STRT_TIME,			//47
	ADV_CFG_FIELD_GREETING2_END_TIME,			//48
	ADV_CFG_FIELD_GREETING2_MSG,				//49
	ADV_CFG_FIELD_GREETING3_STRT_TIME,			//50
	ADV_CFG_FIELD_GREETING3_END_TIME,			//51
	ADV_CFG_FIELD_GREETING3_MSG,				//52
	ADV_CFG_FIELD_GREETING4_STRT_TIME,			//53
	ADV_CFG_FIELD_GREETING4_END_TIME,			//54
	ADV_CFG_FIELD_GREETING4_MSG,				//55

	ADV_CFG_FIELD_TWO_PERSON_MODE,				//56
	ADV_CFG_FIELD_AUTO_ALARM_ACK_ENABLE,		//57
	ADV_CFG_FIELD_AUTO_ALARM_ACK_TIMER,			//58

	ADV_CFG_FIELD_MIFARE_CUSTOM_KEY_ENBL,		//59
	ADV_CFG_FIELD_MIFARE_CUSTOM_KEY,			//60
	ADV_CFG_FIELD_HID_ICLASS_CUSTOM_KEY_ENBL,	//61
	ADV_CFG_FIELD_HID_ICLASS_CUSTOM_KEY,		//62
	ADV_CFG_FIELD_CUSTOM_KEY_AUTO_UPDATE_F,		//63

	ADV_CFG_FIELD_SMART_ROUTE_ORDER,			//64
	ADV_CFG_FIELD_VERIFY_ACCESS_POLICY_ON_EXIT,	//65

	ADV_CFG_FIELD_ACCEPT_EXT_IO_LINK,			//66
	ADV_CFG_FIELD_OUTPUT_WAIT_TIMER,			//67

	ADV_CFG_FIELD_SELF_ENRL_ENABLE,				//68
	ADV_CFG_FIELD_SELF_ENRL_RETRY_CNT,			//69
	ADV_CFG_FIELD_VAM_ENABLE_F,					//70

	ADV_CFG_FIELD_ACCESS_ALLOW_USER_TYPE,		//71
	ADV_CFG_FIELD_ACCESS_DENY_USER_TYPE,		//72
	ADV_CFG_FIELD_OCCUPANCY_MIN_USERS,			//73
	ADV_CFG_FIELD_ZERO_OCCUPANCY,				//74
	ADV_CFG_FIELD_JCM_ENABLE,					//75
	ADV_CFG_FIELD_FACILITY_CODE,				//76
	ADV_CFG_FIELD_VISITOR_PASS_SURRENDER_ENBL,	//77
	ADV_CFG_CAFE_INTER_TRANSACTION_DELAY,		//78
	ADV_CFG_FIRST_IN_RESET_AFTER,				//79
	ADV_CFG_FIRST_IN_LOCK_EXPIRE_TIMER,			//80
//	ADV_CFG_FIELD_ENROLL_ID_TYPE,				//81
	ADV_CFG_TWO_CRED_MUST_MODE_ENABLE,			//81
	ADV_CFG_SEQ_IN_OUT_MODE_ENABLE,				//82
	ADV_CFG_SHOW_PIN,							//83
	ADV_CFG_SHOW_ATTENDANCE_DETAIL,				//84
	ADV_CFG_APB_RESET_AFTER,					//85
	ADV_CFG_APB_FORGIVENESS_TIMER,				//86
	ADV_CFG_AUTO_HIDE_MENU_BAR_F,				//87
	ADV_CFG_BIRTHDAY_MESSAGE,					//88
	ADV_CFG_MJPEG_STREAM_API,					//89
	ADV_CFG_STREAM_API_USER_NAME,				//90
	ADV_CFG_STREAM_API_PASSWORD,				//91
	ADV_CFG_RETAIN_JOB_SELECTION,				//92
	ADV_CFG_FIELD_SAVE_FP_IMAGE_FLAG,			//93
	ADV_CFG_TEMP_LOG_ENABLE,					//94
	ADV_CFG_TEMP_UNIT,							//95
	ADV_CFG_SENSOR_TYPE,						//96
	ADV_CFG_SENSOR_INTERFACE,					//97
	ADV_CFG_RESTRICTION_TYPE,					//98
	ADV_CFG_BYPASS_IF_SENSOR_DISCONNECT,		//99
	ADV_CFG_THRESHOLD_TEMP,						//100
	ADV_CFG_CALIBRATION_PARA,					//101
	ADV_CFG_EMISSIVITY,							//102
	ADV_CFG_AUTO_ADD_TEMP_USER,								//103
	ADV_CFG_AUTO_ADD_TEMP_USER_NAME_VIA_DEVICE,								//104
	ADV_CFG_AUTO_ADD_TEMP_USER_CONFIRM,								//105
	ADV_CFG_DUMMY4,								//106
	ADV_CFG_DUMMY5,								//107
	ADV_CFG_APPROACH_TO_SENSER_WAIT_TMR,		//108
	ADV_CFG_TEMPERATURE_DETECTION_TIME_OUT,		//109
	ADV_CFG_TOLERANCE_BW_CONSE_READING,			//110
	ADV_CFG_CONSE_READ_COUNT_WITHIN_TOLE,		//111
	ADV_CFG_MIN_TEMP_FOR_ACCESS,				//112
	ADV_CFG_FIELD_FACE_ENROLL_MAX,				//113
	ADV_CFG_FACE_MASK_COMPULSION_ENBL = 114,	// 114
	ADV_CFG_IDT_FACE_MASK_DETECTION_THRESHOLD,	// 115
	ADV_CFG_APPROACH_TO_CAMERA_WAIT_TMR,		// 116
	ADV_CFG_MASK_DETECTION_TIME_OUT,		// 117
	ADV_CFG_FACE_MASK_RESTRICTION,			// 118
	ADV_CFG_VISIBLE_FACE_FOR_ENRL,	// 119
	ADV_CFG_FIELD_DURESS_ENABLE,	//120		//Enable Duress
	ADV_CFG_OFFLINE_ITEM_QUANTITY_RESTRICTION_ENABLE = 121,// 121
	ADV_CFG_ALLOWED_OFFLINE_ITEM_QUANTITY,		// 122

	MAX_ADV_CFG_FIELD
}ADV_CFG_FIELD_e;

//Network configuration
typedef enum
{
	NW_PARA_FIELD_IP = 1,
	NW_PARA_FIELD_SUBNET,
	NW_PARA_FIELD_GATEWAY,
	NW_PARA_FIELD_DNS,
	NW_PARA_FIELD_SERVER_IP,
	NW_PARA_FIELD_SERVER_PORT,
	MAX_NW_PARA_FIELD
}NW_PARA_FIELD_e;

//for DST
typedef enum
{
	DST_FIELD_MODE = 1,							//1
	DST_FIELD_FORWARD_DATE_WISE_DAY,			//2
	DST_FIELD_FORWARD_DATE_WISE_MONTH,			//3
	DST_FIELD_FORWARD_DAY_WISE_ORDINAL,			//4
	DST_FIELD_FORWARD_DAY_WISE_DAY,				//5
	DST_FIELD_FORWARD_DAY_WISE_MONTH,			//6
	DST_FIELD_FORWARD_TIME,						//7
	DST_FIELD_BACKWARD_DATE_WISE_DAY,			//8
	DST_FIELD_BACKWARD_DATE_WISE_MONTH,			//9
	DST_FIELD_BACKWARD_DAY_WISE_ORDINAL,		//10
	DST_FIELD_BACKWARD_DAY_WISE_DAY,			//11
	DST_FIELD_BACKWARD_DAY_WISE_MONTH,			//12
	DST_FIELD_BACKWARD_TIME,					//13
	DST_FIELD_TIME_DURATION,					//14

	MAX_DST_FIELD
}DST_FIELD_e;

//Special Function configuration
typedef enum
{
	SPL_FN_FIELD_ENABLE = 1,		//1
	SPL_FN_FIELD_CARD1,				//2
	SPL_FN_FIELD_CARD2,				//3
	SPL_FN_FIELD_CARD3,				//4
	SPL_FN_FIELD_CARD4,				//5
	SPL_FN_FIELD_PROMPT_JOB_CODES,	//6

	MAX_SPL_FN_FIELD
}SPL_FN_FIELD_e;

//Visitor configuration
typedef enum
{
	VISITOR_CFG_FIELD_NAME = 1,
	VISITOR_CFG_FIELD_START_DATE,
	VISITOR_CFG_FIELD_START_TIME,
	VISITOR_CFG_FIELD_END_DATE,
	VISITOR_CFG_FIELD_END_TIME,
	VISITOR_CFG_FIELD_REPEAT_MODE,
	VISITOR_CFG_FIELD_REPEAT_DAYS,

	MAX_VISITOR_CFG_FIELD
}VISITOR_CFG_FIELD_e;

//Time trigger configuration
typedef enum
{
	TIME_TRIG_FIELD_ENABLE = 1,
	TIME_TRIG_FIELD_NAME,
	TIME_TRIG_FIELD_START_TIME,
	TIME_TRIG_FIELD_DURATION,
	TIME_TRIG_FIELD_OP_PORT,
	TIME_TRIG_FIELD_ACTIVE_DAY0,
	TIME_TRIG_FIELD_ACTIVE_DAY1,
	TIME_TRIG_FIELD_ACTIVE_DAY2,
	TIME_TRIG_FIELD_ACTIVE_DAY3,
	TIME_TRIG_FIELD_ACTIVE_DAY4,
	TIME_TRIG_FIELD_ACTIVE_DAY5,
	TIME_TRIG_FIELD_ACTIVE_DAY6,
	TIME_TRIG_FIELD_HOLIDAY_OVERRIDE,

	MAX_TIME_TRIG_FIELD
}TIME_TRIG_FIELD_e;

//e-Canteen Item configuration
typedef enum
{
	CAFE_ITEM_FIELD_NAME = 1,
	CAFE_ITEM_FIELD_PRICE,
	CAFE_ITEM_FIELD_DISCOUNT_ENABLE,
	CAFE_ITEM_FIELD_DISCOUNT_1,
	CAFE_ITEM_FIELD_DISCOUNT_2,
	CAFE_ITEM_FIELD_DISCOUNT_3,
	CAFE_ITEM_FIELD_DISCOUNT_4,

	MAX_CAFE_ITEM_FIELD
}CAFE_ITEM_FIELD_e;

//e-Canteen Menu Configuration
typedef enum
{
	CAFE_MENU_FIELD_ENABLE = 1,
	CAFE_MENU_FIELD_DFLT_ITEM,
	CAFE_MENU_FIELD_NAME,
	CAFE_MENU_FIELD_ITEM_1,
	CAFE_MENU_FIELD_ITEM_2,
	CAFE_MENU_FIELD_ITEM_3,
	CAFE_MENU_FIELD_ITEM_4,
	CAFE_MENU_FIELD_ITEM_5,
	CAFE_MENU_FIELD_ITEM_6,
	CAFE_MENU_FIELD_ITEM_7,
	CAFE_MENU_FIELD_ITEM_8,
	CAFE_MENU_FIELD_ITEM_9,
	CAFE_MENU_FIELD_ITEM_10,
	CAFE_MENU_FIELD_ITEM_11,
	CAFE_MENU_FIELD_ITEM_12,
	CAFE_MENU_FIELD_ITEM_13,
	CAFE_MENU_FIELD_ITEM_14,
	CAFE_MENU_FIELD_ITEM_15,
	CAFE_MENU_FIELD_ITEM_16,
	CAFE_MENU_FIELD_ITEM_17,
	CAFE_MENU_FIELD_ITEM_18,
	CAFE_MENU_FIELD_ITEM_19,
	CAFE_MENU_FIELD_ITEM_20,
	CAFE_MENU_FIELD_ITEM_21,
	CAFE_MENU_FIELD_ITEM_22,
	CAFE_MENU_FIELD_ITEM_23,
	CAFE_MENU_FIELD_ITEM_24,
	CAFE_MENU_FIELD_ITEM_25,
	CAFE_MENU_FIELD_ITEM_26,
	CAFE_MENU_FIELD_ITEM_27,
	CAFE_MENU_FIELD_ITEM_28,
	CAFE_MENU_FIELD_ITEM_29,
	CAFE_MENU_FIELD_ITEM_30,
	CAFE_MENU_FIELD_ITEM_31,
	CAFE_MENU_FIELD_ITEM_32,
	CAFE_MENU_FIELD_ITEM_33,
	CAFE_MENU_FIELD_ITEM_34,
	CAFE_MENU_FIELD_ITEM_35,
	CAFE_MENU_FIELD_ITEM_36,
	CAFE_MENU_FIELD_ITEM_37,
	CAFE_MENU_FIELD_ITEM_38,
	CAFE_MENU_FIELD_ITEM_39,
	CAFE_MENU_FIELD_ITEM_40,
	CAFE_MENU_FIELD_ITEM_41,
	CAFE_MENU_FIELD_ITEM_42,
	CAFE_MENU_FIELD_ITEM_43,
	CAFE_MENU_FIELD_ITEM_44,
	CAFE_MENU_FIELD_ITEM_45,
	CAFE_MENU_FIELD_ITEM_46,
	CAFE_MENU_FIELD_ITEM_47,
	CAFE_MENU_FIELD_ITEM_48,
	CAFE_MENU_FIELD_ITEM_49,
	CAFE_MENU_FIELD_ITEM_50,
	CAFE_MENU_FIELD_ITEM_51,
	CAFE_MENU_FIELD_ITEM_52,
	CAFE_MENU_FIELD_ITEM_53,
	CAFE_MENU_FIELD_ITEM_54,
	CAFE_MENU_FIELD_ITEM_55,
	CAFE_MENU_FIELD_ITEM_56,
	CAFE_MENU_FIELD_ITEM_57,
	CAFE_MENU_FIELD_ITEM_58,
	CAFE_MENU_FIELD_ITEM_59,
	CAFE_MENU_FIELD_ITEM_60,
	CAFE_MENU_FIELD_ITEM_61,
	CAFE_MENU_FIELD_ITEM_62,
	CAFE_MENU_FIELD_ITEM_63,
	CAFE_MENU_FIELD_ITEM_64,
	CAFE_MENU_FIELD_ITEM_65,
	CAFE_MENU_FIELD_ITEM_66,
	CAFE_MENU_FIELD_ITEM_67,
	CAFE_MENU_FIELD_ITEM_68,
	CAFE_MENU_FIELD_ITEM_69,
	CAFE_MENU_FIELD_ITEM_70,
	CAFE_MENU_FIELD_ITEM_71,
	CAFE_MENU_FIELD_ITEM_72,
	CAFE_MENU_FIELD_ITEM_73,
	CAFE_MENU_FIELD_ITEM_74,
	CAFE_MENU_FIELD_ITEM_75,
	CAFE_MENU_FIELD_ITEM_76,
	CAFE_MENU_FIELD_ITEM_77,
	CAFE_MENU_FIELD_ITEM_78,
	CAFE_MENU_FIELD_ITEM_79,
	CAFE_MENU_FIELD_ITEM_80,
	CAFE_MENU_FIELD_ITEM_81,
	CAFE_MENU_FIELD_ITEM_82,
	CAFE_MENU_FIELD_ITEM_83,
	CAFE_MENU_FIELD_ITEM_84,
	CAFE_MENU_FIELD_ITEM_85,
	CAFE_MENU_FIELD_ITEM_86,
	CAFE_MENU_FIELD_ITEM_87,
	CAFE_MENU_FIELD_ITEM_88,
	CAFE_MENU_FIELD_ITEM_89,
	CAFE_MENU_FIELD_ITEM_90,
	CAFE_MENU_FIELD_ITEM_91,
	CAFE_MENU_FIELD_ITEM_92,
	CAFE_MENU_FIELD_ITEM_93,
	CAFE_MENU_FIELD_ITEM_94,
	CAFE_MENU_FIELD_ITEM_95,
	CAFE_MENU_FIELD_ITEM_96,
	CAFE_MENU_FIELD_ITEM_97,
	CAFE_MENU_FIELD_ITEM_98,
	CAFE_MENU_FIELD_ITEM_99,

	MAX_CAFE_MENU_FIELD
}CAFE_MENU_FIELD_e;

//e-Canteen Menu Schedule Configuration
typedef enum
{
	CAFE_MENU_SCH_FIELD_MENU_CODE = 1,
	CAFE_MENU_SCH_FIELD_START_TIME,
	CAFE_MENU_SCH_FIELD_END_TIME,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY0,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY1,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY2,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY3,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY4,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY5,
	CAFE_MENU_SCH_FIELD_ACTIVE_DAY6,

	MAX_CAFE_MENU_SCH_FIELD
}CAFE_MENU_SCH_FIELD_e;

//e-Canteen Printer Configuration
typedef enum
{
	PRINTER_TYPE = 1,
	PRINTER_COMM_TYPE,
	PRINTER_COMPANY_NAME,
	PRINTER_COMPANY_ADDRESS1,
	PRINTER_COMPANY_ADDRESS2,
	PRINTER_COMPANY_ADDRESS3,
	PRINTER_COMPANY_ADDRESS4,
	PRINTER_PUNCH_LINE,
	PRINTER_BAUD_RATE,
	PRINTER_EXCLUDE_PRICE_FLAG,
	PRINTER_USER_BALANCE_ON_COUPON_FLAG,	// User Balance on Coupon

	MAX_PRINTER_FIELD
}PRINTER_FIELD_e;

//for time stamping
typedef enum
{
	TIME_STAMP_FIELD_ENABLE = 1,
	TIME_STAMP_FIELD_NAME,
	TIME_STAMP_FIELD_START_TIME,
	TIME_STAMP_FIELD_END_TIME,
	TIME_STAMP_FIELD_TRIGGER,
	TIME_STAMP_FIELD_ACTIVEDAY0,
	TIME_STAMP_FIELD_ACTIVEDAY1,
	TIME_STAMP_FIELD_ACTIVEDAY2,
	TIME_STAMP_FIELD_ACTIVEDAY3,
	TIME_STAMP_FIELD_ACTIVEDAY4,
	TIME_STAMP_FIELD_ACTIVEDAY5,
	TIME_STAMP_FIELD_ACTIVEDAY6,
	TIME_STAMP_FIELD_ACTIVEHOLIDAY,

	MAX_TIME_STAMP_FIELD
}TIME_STAMP_FIELD_e;

//for greeting message
typedef enum
{
	GREETING_MSG_FIELD_ENABLE = 1,
	GREETING_MSG_FIELD_TYPE,
	GREETING_MSG_FIELD_ALL_USER,
	GREETING_MSG_FIELD_USERID,
	GREETING_MSG_FIELD_DATE,
	GREETING_MSG_FIELD_LINE1,
	GREETING_MSG_FIELD_LINE2,
	GREETING_MSG_FIELD_IMAGE_ID,
	GREETING_MSG_FIELD_AUDIO_ID,

	MAX_GREETING_MSG_FIELD
}GREETING_MSG_FIELD_e;

//Finger print reader Configuration
typedef enum
{
	FPR_CFG_FIELD_SEC_LEVEL = 1,
	FPR_CFG_FIELD_SENSIVITY_LEVEL,
	FPR_CFG_FIELD_LIGHT_CONDITION,
	FPR_CFG_FIELD_FAST_MODE,
	FPR_CFG_FIELD_IMAGE_QUALITY,

	MAX_FPR_CFG_FIELD
}FPR_CFG_FIELD_e;

//dvr-nvr intigration related configuration
typedef enum
{
	DVR_INTEGRATION_FIELD_DOOR_ID = 1,		//1
	DVR_INTEGRATION_FIELD_ACTIVE,			//2		//config active/inactive
	DVR_INTEGRATION_FIELD_EVT_TYPE,			//3		//event type
	DVR_INTEGRATION_FIELD_ACTN_TYPE,		//4		//action type to be taken when event happen.
	DVR_INTEGRATION_FIELD_STRT_TIME,		//5		//start time (HHMM)
	DVR_INTEGRATION_FIELD_END_TIME,			//6		//end time (HHMM)
	DVR_INTEGRATION_FIELD_ACTIVE_DAY0,		//7
	DVR_INTEGRATION_FIELD_ACTIVE_DAY1,		//8
	DVR_INTEGRATION_FIELD_ACTIVE_DAY2,		//9
	DVR_INTEGRATION_FIELD_ACTIVE_DAY3,		//10
	DVR_INTEGRATION_FIELD_ACTIVE_DAY4,		//11
	DVR_INTEGRATION_FIELD_ACTIVE_DAY5,		//12
	DVR_INTEGRATION_FIELD_ACTIVE_DAY6,		//13
	DVR_INTEGRATION_FIELD_HOLIDAY_OVER,		//14	//holiday override enable-disable
	DVR_INTEGRATION_FIELD_CAMERA1,			//15
	DVR_INTEGRATION_FIELD_CAMERA2,			//16
	DVR_INTEGRATION_FIELD_CAMERA3,			//17
	DVR_INTEGRATION_FIELD_CAMERA4,			//18
	DVR_INTEGRATION_FIELD_CAMERA5,			//19
	DVR_INTEGRATION_FIELD_CAMERA6,			//20
	DVR_INTEGRATION_FIELD_CAMERA7,			//21
	DVR_INTEGRATION_FIELD_CAMERA8,			//22
	DVR_INTEGRATION_FIELD_CAMERA9,			//23
	DVR_INTEGRATION_FIELD_CAMERA10,			//24
	DVR_INTEGRATION_FIELD_CAMERA11,			//25
	DVR_INTEGRATION_FIELD_CAMERA12,			//26
	DVR_INTEGRATION_FIELD_CAMERA13,			//27
	DVR_INTEGRATION_FIELD_CAMERA14,			//28
	DVR_INTEGRATION_FIELD_CAMERA15,			//29
	DVR_INTEGRATION_FIELD_CAMERA16,			//30
	DVR_INTEGRATION_FIELD_REC_DURATION,		//31	//recording duration in minutes
	DVR_INTEGRATION_FIELD_POPUP_DURATION,	//32	//video popup duration in seconds.
	DVR_INTEGRATION_FIELD_PTZ_PRESET_POS,	//33	//PTZ preset number(1-64)
	DVR_INTEGRATION_FIELD_EMAIL_ADDR,		//34	//email addr where action(snapshot, recording) send.
	DVR_INTEGRATION_FIELD_READER_MODE,		//35

	DVR_INTEGRATION_FIELD_CAMERA17,			//36
	DVR_INTEGRATION_FIELD_CAMERA18,			//37
	DVR_INTEGRATION_FIELD_CAMERA19,			//38
	DVR_INTEGRATION_FIELD_CAMERA20,			//39
	DVR_INTEGRATION_FIELD_CAMERA21,			//40
	DVR_INTEGRATION_FIELD_CAMERA22,			//41
	DVR_INTEGRATION_FIELD_CAMERA23,			//42
	DVR_INTEGRATION_FIELD_CAMERA24,			//43

	MAX_DVR_INTEGRATION_FIELD,
}DVR_INTEGRATION_FIELD_e;

typedef enum
{
	SMART_ROUTE_ACCESS_FIELD_ENABLE = 1, 	// 1
	SMART_ROUTE_ACCESS_FIELD_DOOR_LEVEL,	// 2
	SMART_ROUTE_ACCESS_FIELD_TYPE,			// 3
	SMART_ROUTE_ACCESS_FIELD_RESET_ON_START_LEVEL, // 4
	SMART_ROUTE_ACCESS_FIELD_ROUTE_MIN_LEVEL,// 5
	SMART_ROUTE_ACCESS_FIELD_ROUTE_MAX_LEVEL,// 6
	SMART_ROUTE_ACCESS_FIELD_SQUENCED,	//7

	MAX_SMART_ROUTE_ACCESS_FIELD,
}SMART_ROUTE_ACCESS_FIELD_e;

typedef enum
{
	IO_LINK_EXT_DEVICE_CONFIG_FIELD_DEVICE_1_IP = 1,
	IO_LINK_EXT_DEVICE_CONFIG_FIELD_DEVICE_255_IP = 255,

	MAX_IO_LINK_EXT_DEVICE_CONFIG_FIELD
}IO_LINK_EXT_DEVICE_CONFIG_FIELD_e;

typedef enum
{
	IO_LINK_EXT_DEVICE_MAPPING_FIELD_DEVICE_1_ENABLE = 1,
	IO_LINK_EXT_DEVICE_MAPPING_FIELD_DEVICE_255_ENABLE = 255,

	MAX_IO_LINK_EXT_MAPPING_CONFIG_FIELD
}IO_LINK_EXT_DEVICE_MAPPING_FIELD_e;

typedef enum
{
	CARD_FORMAT_CONFIG_MAX_BIT = 1,
	CARD_FORMAT_CONFIG_CARD_STRUCT,
	CARD_FORMAT_CONFIG_REVERSE_ID,
	CARD_FORMAT_CONFIG_FC_IN_ID,
	CARD_FORMAT_CONFIG_SEQUENCE_OF_OPERATION,
	CARD_FORMAT_ID,

	MAX_CARD_FORMAT_CONFIG_FIELD,
}CARD_FORMAT_CONFIG_FIELD_e;

typedef enum
{
	VAM_CFG_FIELD_PASS_ID = 1,
	VAM_CFG_FIELD_DRIVER_CARD,
	VAM_CFG_FIELD_HELPER_CARD,
	VAM_CFG_FIELD_VEHICLE_CARD,
	VAM_CFG_FIELD_START_DATE,
	VAM_CFG_FIELD_START_TIME,
	VAM_CFG_FIELD_END_DATE,
	VAM_CFG_FIELD_END_TIME,
	VAM_CFG_FIELD_SMART_ROUTE,
	VAM_CFG_FIELD_ACCESS_LEVEL,
	VAM_CFG_FIELD_STATUS,

	MAX_VAM_CONFIG_FIELD
}VAM_CONFIG_FIELD_e;

typedef enum
{
	JCM_CFG_REF_ID = 1,
	JCM_CFG_JOB_CODE,
	JCM_CFG_JOB_NAME,
	JCM_CFG_START_DATE,
	JCM_CFG_END_DATE,

	MAX_JCM_CONFIG_FIELD,
}JCM_CONFIG_FIELD_e;

typedef enum
{
	MULTI_LANG_CFG_ENABLE_FLAGE				=1,
	MULTI_LANG_CFG_ENABLE_DATA_INPUT_FLAGE	=3,

	MAX_MULTI_LANG_CONFIG_FIELD
}MULTI_LANG_CONFIG_FIELD_e;

typedef enum
{
	DOOR_MODE_SCH_CFG_FIELD_STRT_TIME = 1,
	DOOR_MODE_SCH_CFG_FIELD_END_TIME,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_SUN,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_MON,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_TUE,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_WED,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_THU,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_FRI,
	DOOR_MODE_SCH_CFG_FIELD_ENBL_SAT,
	DOOR_MODE_SCH_CFG_FIELD_DOOR_READER_MODE,

}RMS_CONFIG_FIELD_e;

typedef enum
{
	BLE_CONFIG_BT_NAME = 1,
	BLE_CONFIG_ADVERTISE_BT,
	BLE_CONFIG_RANGE,
	BLE_CONFIG_CUSTOM_RANGE_STRENGTH,

	MAX_BLE_CONFIG
}BLE_CONFIG_e;

typedef enum
{
	IP_CAMERA_CONFIG_SCHEDULE_NAME = 1,
	IP_CAMERA_CONFIG_SCHEDULE_ACTIVE,
	IP_CAMERA_CONFIG_EVENT,
	IP_CAMERA_CONFIG_EVENT_MODE,
	IP_CAMERA_CONFIG_START_TIME,
	IP_CAMERA_CONFIG_END_TIME,
	IP_CAMERA_CONFIG_ACTIVE_DAY0,
	IP_CAMERA_CONFIG_ACTIVE_DAY1,
	IP_CAMERA_CONFIG_ACTIVE_DAY2,
	IP_CAMERA_CONFIG_ACTIVE_DAY3,
	IP_CAMERA_CONFIG_ACTIVE_DAY4,
	IP_CAMERA_CONFIG_ACTIVE_DAY5,
	IP_CAMERA_CONFIG_ACTIVE_DAY6,
	IP_CAMERA_CONFIG_ACTIVE_HOLIDAY,
}IP_CAMERA_CONFIG_e;

typedef enum
{
	IP_CAMERA_ADVANCE_CONFIG_URL = 1,
	IP_CAMERA_ADVANCE_CONFIG_USERNAME,
	IP_CAMERA_ADVANCE_CONFIG_PASSWORD,
}IP_CAMERA_ADVANCE_CONFIG_e;

typedef enum
{
	BACKUP_UPDATE_FTP_URL = 1,
	BACKUP_UPDATE_FTP_USERNAME,
	BACKUP_UPDATE_FTP_PASSWORD,

	MAX_BACKUP_UPDATE_CONFIG_FIELD
}BACKUP_AND_UPDATE_CONFIG_FIELD_e;

typedef enum
{
	FACE_RECOGNITION_FR_SEREVR_CONFIG_ENABLE_FR_SEREVR = 1,			//1
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FACE_CAPTURING_MODE,			//2
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FREE_SCAN_TIME_OUT,			//3
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FR_SERVER_HOSTNAME,			//4
	FACE_RECOGNITION_FR_SEREVR_CONFIG_TCP_LISTENING_PORT,			//5
	FACE_RECOGNITION_FR_SEREVR_CONFIG_IDENTIFICATION_TIMEOUT,		//6
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FR_SERVER_MODE,				//7
	FACE_RECOGNITION_FR_SEREVR_CONFIG_EN_FACE_SCAN_TIMEOUT_FLG,		//8
	FACE_RECOGNITION_FR_SEREVR_CONFIG_GROUP_FR_SUPPORT_FLG,			//9
	FACE_RECOGNITION_FR_SEREVR_CONFIG_ADAPTIVE_FACE_ENROLL_FLG,			//10
	FACE_RECOGNITION_FR_SEREVR_CONFIG_THRESHOLD_DEVIATION,				//11
	FACE_RECOGNITION_FR_SEREVR_CONFIG_MULTI_USR_MATCH_SCR_DEVIATION,	//12
	FACE_RECOGNITION_FR_SEREVR_CONFIG_CNFRM_BEFORE_ADPTV_FACE_ENROLL,	//13
	FACE_RECOGNITION_FR_SEREVR_CONFIG_CONFLICT_FLG,						//14
	FACE_RECOGNITION_FR_SEREVR_CONFIG_CONFLICT_MATCHING_THRESHOLD,		//15
	FACE_RECOGNITION_FR_SEREVR_CONFIG_EXCEPTIONAL_FACE_EN,
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FACE_ANTI_SPOOFING = 17,		//17
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FACE_ANTI_SPOOFING_MODE,		//18
	FACE_RECOGNITION_FR_SEREVR_CONFIG_FACE_ANTI_SPOOFING_THRESHOLD,		//19
    	FACE_RECOGNITION_FR_SEREVR_CONFIG_MAX_ADEPTIVE_FACE,                //20
        FACE_RECOGNITION_FR_SEREVR_CONFIG_SHOW_UNKNOWN_USER_ACK, //21
		FACE_RECOGNITION_FR_SEREVR_CONFIG_GENERATE_UNIDENTIFIED_FACE_EVENT, //22
	MAX_FACE_RECOGNITION_FR_SEREVR_CONFIG
}FACE_RECOGNITION_CONFIG_FIELD_e;

/** Reader BLE Configurations*/
typedef enum
{
	RDR_BLE_CFG_CONFIGURE_BLE_FROM_SERVER = 1,	// 01
	RDR_BLE_CFG_BLE_NAME,				// 02
	RDR_BLE_CFG_ADVERTISE_BLE,			// 03
	RDR_BLE_CFG_BLE_RANGE,				// 04
	RDR_BLE_CFG_BLE_CUSTOM_RANGE_STRENGTH,		//05
	MAX_ACMS_RDR_BLE_CONFIG,
}READER_BLE_ACMS_CONFIG_FIELD_e;

/*Access Schedule Configurations*/
typedef enum
{
	TIME_FRAME_FIELD_ENABLE = 1,
	TIME_FRAME_FIELD_START_TIME,
	TIME_FRAME_FIELD_END_TIME,
	TIME_FRAME_FIELD_ACTIVEDAY0,//SUNDAY
	TIME_FRAME_FIELD_ACTIVEDAY1,//MONDAY
	TIME_FRAME_FIELD_ACTIVEDAY2,//TUESDAY
	TIME_FRAME_FIELD_ACTIVEDAY3,//WEDNESDAY
	TIME_FRAME_FIELD_ACTIVEDAY4,//THURSDAY
	TIME_FRAME_FIELD_ACTIVEDAY5,//FRIDAY
	TIME_FRAME_FIELD_ACTIVEDAY6,//SATURDAY
	TIME_FRAME_FIELD_ACTIVEHOLIDAY,
	MAX_TIME_FRAME_FIELD
}ACCESS_SCHEDULE_CONFIG_FIELD_e;

//******** Function Prototypes *******


#endif  // MXACMSCONFIGFIELD_H
