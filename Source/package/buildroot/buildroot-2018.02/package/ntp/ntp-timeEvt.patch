--- ./main.c	2011-09-23 08:47:26.000000000 +0530
+++ ./sntp/main.c	2014-05-19 16:04:03.612261502 +0530
@@ -50,6 +50,7 @@
 	int ow_ret;
 	int bcast = 0;
 	char *hostname;
+	char sysBuff[100];
 
 	optct = optionProcess(&sntpOptions, argc, argv);
 	argc -= optct;
@@ -112,6 +113,8 @@
 	resc = resolve_hosts((const char **)argv, argc, &resh, ai_fam_pref);
 	if (resc < 1) {
 		printf("Unable to resolve hostname(s)\n");
+		sprintf(sysBuff, "/matrix/app/bin/evtDetect STAT_DETECT sntp FAIL &");
+		system(sysBuff);
 		return -1;
 	}
 	bcast = ENABLED_OPT(BROADCAST);
@@ -150,7 +153,11 @@
 	free(resh);
 
 	if (!sync_data_suc)
+	{
+		sprintf(sysBuff, "/matrix/app/bin/evtDetect STAT_DETECT sntp FAIL &");
+		system(sysBuff);
 		return 1;
+	}
 	return 0;
 }
 
@@ -444,6 +451,7 @@
 	)
 {
 	struct timeval tp;
+	char	sysBuff[200];
 
 	if (ENABLED_OPT(SETTOD)) {
 		GETTIMEOFDAY(&tp, NULL);
@@ -452,10 +460,13 @@
 		tp.tv_usec += 1e6 * (offset - (long)offset);
 		NORMALIZE_TIMEVAL(tp);
 
-		if (SETTIMEOFDAY(&tp, NULL) < 0) {
-			msyslog(LOG_ERR, "Time not set: settimeofday(): %m");
-			return -1;
-		}
+//		if (SETTIMEOFDAY(&tp, NULL) < 0) {
+//			msyslog(LOG_ERR, "Time not set: settimeofday(): %m");
+//			return -1;
+//		}
+		msyslog(LOG_DEBUG, "Received time sec[%ld] usec[%ld]\n", tp.tv_sec, tp.tv_usec);
+		sprintf(sysBuff, "/matrix/app/bin/evtDetect STAT_DETECT sntp SUCCESS %ld %ld &", tp.tv_sec, tp.tv_usec);
+		system(sysBuff);
 		return 0;
 	}
 
